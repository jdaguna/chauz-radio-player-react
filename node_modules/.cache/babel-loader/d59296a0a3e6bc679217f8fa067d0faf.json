{"ast":null,"code":"import _classCallCheck from \"/Users/josh/Desktop/today/chauz-radio-player-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/josh/Desktop/today/chauz-radio-player-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/josh/Desktop/today/chauz-radio-player-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/josh/Desktop/today/chauz-radio-player-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/josh/Desktop/today/chauz-radio-player-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/josh/Desktop/today/chauz-radio-player-react/src/components/Menu.js\";\nimport React, { Component } from 'react';\n\nvar Menu =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu(props) {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Menu).call(this, props));\n    _this.state = {\n      menuOpen: false\n    };\n    return _this;\n  } // This keeps your state in sync with the opening/closing of the menu\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\n\n\n  _createClass(Menu, [{\n    key: \"handleStateChange\",\n    value: function handleStateChange(state) {\n      this.setState({\n        menuOpen: state.isOpen\n      });\n    } // This can be used to close the menu, e.g. when a user clicks a menu item\n\n  }, {\n    key: \"closeMenu\",\n    value: function closeMenu() {\n      this.setState({\n        menuOpen: false\n      });\n    } // This can be used to toggle the menu, e.g. when using a custom icon\n    // Tip: You probably want to hide either/both default icons if using a custom icon\n    // See https://github.com/negomi/react-burger-menu#custom-icons\n\n  }, {\n    key: \"toggleMenu\",\n    value: function toggleMenu() {\n      this.setState({\n        menuOpen: !this.state.menuOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        isOpen: this.state.menuOpen,\n        onStateChange: function onStateChange(state) {\n          return _this2.handleStateChange(state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.closeMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Home\"), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.closeMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"About\"), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.closeMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Contact\"), React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.closeMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Settings\")), React.createElement(CustomIcon, {\n        onClick: function onClick() {\n          return _this2.toggleMenu();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);","map":{"version":3,"sources":["/Users/josh/Desktop/today/chauz-radio-player-react/src/components/Menu.js"],"names":["React","Component","Menu","props","state","menuOpen","setState","isOpen","handleStateChange","closeMenu","toggleMenu"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,I;;;;;AACJ,gBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAFkB;AAKnB,G,CAED;AACA;;;;;sCACmBD,K,EAAO;AACxB,WAAKE,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAED,KAAK,CAACG;AAAjB,OAAd;AACD,K,CAED;;;;gCACa;AACX,WAAKD,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACD,K,CAED;AACA;AACA;;;;iCACc;AACZ,WAAKC,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAvB,OAAd;AACD;;;6BAES;AAAA;;AACR,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,QADrB;AAEE,QAAA,aAAa,EAAE,uBAACD,KAAD;AAAA,iBAAW,MAAI,CAACI,iBAAL,CAAuBJ,KAAvB,CAAX;AAAA,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACK,SAAL,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKE;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,SAAL,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,SAAL,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,EAOE;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,SAAL,EAAN;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CADF,EAUE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,UAAL,EAAN;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF;AAcD;;;;EAzCgBV,KAAK,CAACC,S","sourcesContent":["import React, {Component} from 'react';\n\nclass Menu extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      menuOpen: false\n    }\n  }\n\n  // This keeps your state in sync with the opening/closing of the menu\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\n  handleStateChange (state) {\n    this.setState({menuOpen: state.isOpen})\n  }\n\n  // This can be used to close the menu, e.g. when a user clicks a menu item\n  closeMenu () {\n    this.setState({menuOpen: false})\n  }\n\n  // This can be used to toggle the menu, e.g. when using a custom icon\n  // Tip: You probably want to hide either/both default icons if using a custom icon\n  // See https://github.com/negomi/react-burger-menu#custom-icons\n  toggleMenu () {\n    this.setState({menuOpen: !this.state.menuOpen})\n  }\n\n  render () {\n    return (\n      <div>\n        <Menu\n          isOpen={this.state.menuOpen}\n          onStateChange={(state) => this.handleStateChange(state)}\n        >\n          <a onClick={() => this.closeMenu()}>Home</a>\n          <a onClick={() => this.closeMenu()}>About</a>\n          <a onClick={() => this.closeMenu()}>Contact</a>\n          <a onClick={() => this.closeMenu()}>Settings</a>\n        </Menu>\n        <CustomIcon onClick={() => this.toggleMenu()} />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}